// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/ocr": {
            "post": {
                "description": "OCR Service for the OCR Service",
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "OCR"
                ],
                "summary": "OCR Service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "API Key",
                        "name": "X-API-Key",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "File",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Cache Policy (options: cache_first, no_cache, cache_only)",
                        "name": "cache_policy",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "OCR Engine (options: TESSERACT, EASYOCR, DOCTR)",
                        "name": "engine",
                        "in": "formData"
                    },
                    {
                        "type": "boolean",
                        "description": "Raw (options: true, false)",
                        "name": "raw",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Organization ID",
                        "name": "organization_id",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.OCRResponseList"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrPermissionDeniedResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/utils.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "utils.BBox": {
            "type": "object",
            "properties": {
                "bottomLeft": {
                    "$ref": "#/definitions/utils.XY"
                },
                "bottomRight": {
                    "$ref": "#/definitions/utils.XY"
                },
                "topLeft": {
                    "$ref": "#/definitions/utils.XY"
                },
                "topRight": {
                    "$ref": "#/definitions/utils.XY"
                }
            }
        },
        "utils.ErrPermissionDeniedResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Permission denied"
                }
            }
        },
        "utils.ErrorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "Error message"
                }
            }
        },
        "utils.OCREngineType": {
            "type": "string",
            "enum": [
                "TESSERACT",
                "EASYOCR",
                "DOCTR"
            ],
            "x-enum-varnames": [
                "EngineTesseract",
                "EngineEasyOCR",
                "EngineDoctoR"
            ]
        },
        "utils.OCRResponse": {
            "type": "object",
            "properties": {
                "bbox": {
                    "$ref": "#/definitions/utils.BBox"
                },
                "confidence": {
                    "type": "number",
                    "example": 0.5
                },
                "page_number": {
                    "type": "integer",
                    "example": 1
                },
                "text": {
                    "type": "string",
                    "example": "hello world"
                }
            }
        },
        "utils.OCRResponseList": {
            "type": "object",
            "properties": {
                "cached": {
                    "type": "boolean",
                    "example": true
                },
                "engine": {
                    "$ref": "#/definitions/utils.OCREngineType"
                },
                "number_of_tokens": {
                    "type": "integer",
                    "example": 100
                },
                "ocr_responses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/utils.OCRResponse"
                    }
                },
                "raw": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "utils.XY": {
            "type": "object",
            "properties": {
                "x": {
                    "type": "integer",
                    "example": 10
                },
                "y": {
                    "type": "integer",
                    "example": 10
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8001",
	BasePath:         "/api/",
	Schemes:          []string{},
	Title:            "OCR API",
	Description:      "This is a lightweight API with JWT authentication for OCR and LLM services.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
