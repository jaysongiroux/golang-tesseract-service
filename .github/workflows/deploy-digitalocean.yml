name: Deploy to Digital Ocean

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to deploy (e.g., v1.2.3)'
        required: false
        default: ''

env:
  REGISTRY: registry.digitalocean.com
  IMAGE_NAME: tesseract-ocr-service

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract version
        id: version
        run: |
          # First check if this is from a tag push
          if [[ "${{ github.ref_type }}" == "tag" && "${{ github.ref }}" == refs/tags/v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/}
            echo "Using git tag: $VERSION"
          # Then check if version was provided in manual workflow dispatch
          elif [[ -n "${{ github.event.inputs.version }}" ]]; then
            VERSION=${{ github.event.inputs.version }}
            echo "Using manual input version: $VERSION"
          # Otherwise use commit sha with 'dev' prefix
          else
            VERSION="dev-${GITHUB_SHA::8}"
            echo "Using commit sha as version: $VERSION"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DO Container Registry
        run: doctl registry login --expiry-seconds 600

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./backend/Dockerfile.prod
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ secrets.DIGITALOCEAN_REGISTRY_NAME }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}
            
      - name: Deploy to Digital Ocean App Platform
        if: ${{ secrets.DIGITALOCEAN_APP_ID != '' }}
        run: |
          doctl apps create-deployment ${{ secrets.DIGITALOCEAN_APP_ID }} --force-rebuild
