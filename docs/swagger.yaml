basePath: /api/
definitions:
  models.Organization:
    properties:
      createdAt:
        type: string
      id:
        type: integer
      name:
        type: string
      updatedAt:
        type: string
    type: object
  models.OrganizationMember:
    properties:
      createdAt:
        type: string
      organizationID:
        type: integer
      role:
        $ref: '#/definitions/models.OrganizationMemberRole'
      updatedAt:
        type: string
      userID:
        type: integer
    type: object
  models.OrganizationMemberRole:
    enum:
    - MEMBER
    - ADMIN
    - OWNER
    type: string
    x-enum-varnames:
    - OrgRoleMember
    - OrgRoleAdmin
    - OrgRoleOwner
  utils.APITokenResponse:
    properties:
      token:
        example: your-new-token
        type: string
    type: object
  utils.ErrorResponse:
    properties:
      error:
        example: Error message
        type: string
    type: object
  utils.OCRResponse:
    properties:
      text:
        example: Hello, world!
        type: string
    type: object
  utils.TokenResponse:
    properties:
      refresh_token:
        example: your-new-refresh-token
        type: string
      token:
        example: your-new-token
        type: string
    type: object
host: localhost:8001
info:
  contact: {}
  description: This is a lightweight API with JWT authentication for OCR and LLM services.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: OCR API
  version: "1.0"
paths:
  /api/auth/login:
    post:
      consumes:
      - application/json
      description: login a user with email and password
      parameters:
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.TokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Login a user
      tags:
      - Authentication
  /api/auth/register:
    post:
      consumes:
      - application/json
      description: register a new user with email, password, first name, and last
        name
      parameters:
      - description: Email
        in: formData
        name: email
        required: true
        type: string
      - description: Password
        in: formData
        name: password
        required: true
        type: string
      - description: First Name
        in: formData
        name: first_name
        required: true
        type: string
      - description: Last Name
        in: formData
        name: last_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.TokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Register a new user
      tags:
      - Authentication
  /api/auth/renew-token:
    post:
      consumes:
      - application/json
      description: given a valid refresh token, return a new access token
      parameters:
      - description: Refresh Token
        in: header
        name: refresh_token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.TokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Renew your access token given a valid refresh token
      tags:
      - Authentication
  /api/ocr:
    post:
      consumes:
      - multipart/form-data
      description: OCR Service
      parameters:
      - description: File
        in: formData
        name: file
        required: true
        type: file
      - description: Cache Policy
        enum:
        - cache_first
        - no_cache
        - cache_only
        in: formData
        name: cache_policy
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.OCRResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: OCR Service
      tags:
      - OCR
  /api/organization:
    get:
      consumes:
      - application/json
      description: get all organizations for the authenticated user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Organization'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Get all organizations for the authenticated user
      tags:
      - Organization
    post:
      consumes:
      - application/json
      description: create an organization with a name
      parameters:
      - description: Organization Name
        in: formData
        name: org_name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Organization'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Create an organization
      tags:
      - Organization
  /api/organization/:organization_id:
    get:
      consumes:
      - application/json
      description: get an organization
      parameters:
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Organization'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Get an organization
      tags:
      - Organization
  /api/organization/:organization_id/api-key:
    post:
      consumes:
      - application/json
      description: create an API key for the authenticated user
      parameters:
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/utils.APITokenResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Create an API key for the authenticated user
      tags:
      - Organization Member
  /api/organization/:organization_id/members:
    get:
      consumes:
      - application/json
      description: get all members of an organization
      parameters:
      - description: Organization ID
        in: path
        name: organization_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.OrganizationMember'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.ErrorResponse'
      summary: Get all members of an organization
      tags:
      - Organization Members
swagger: "2.0"
